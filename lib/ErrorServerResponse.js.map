{"version":3,"sources":["../source/ErrorServerResponse.js"],"names":["ErrorServerResponse","statusCode","statusText","message","name","Error","captureStackTrace","stack"],"mappings":"0yFAAA;;;;;;;;MASqBA,oB,qEACnB;;;;;;;;KASA,6BAAYC,UAAZ,CAAwBC,UAAxB,CAAoD,cAAhBC,QAAgB,2DAAN,IAAM,2CAClD,qFAAMA,OAAN,GACA,MAAKC,IAAL,CAAY,iBAAZ,CACA,MAAKH,UAAL,CAAkBA,UAAlB,CACA,MAAKC,UAAL,CAAkBA,UAAlB,CACA,MAAKC,OAAL,CAAeA,OAAf,CACA,GAAIE,MAAMC,iBAAV,CAA6B,CAC3BD,MAAMC,iBAAN,uDAA8BN,mBAA9B,CACD,CAFD,IAEO,CACL,MAAKO,KAAL,CAAa,GAAIF,MAAJ,GAAYE,KAC1B,CAViD,YAWnD,C,6CArB8CF,K","sourcesContent":["/**\n * Custom error message for abstract server response\n *\n * @namespace ErrorServerResponse\n * @class\n * @param {number} statusCode - http status code\n * @param {string} statusText - http status code text\n * @param {string | null} [message = null] - error details\n */\nexport default class ErrorServerResponse extends Error {\n  /**\n   * Constructor generates error instance\n   * @memberof ErrorServerResponse\n   * @constructor\n   * @param {number} statusCode - http status code\n   * @param {string} statusText - http status code text\n   * @param {string | null} [message = null] - error details\n   * @return {ErrorServerResponse} - current instance\n   */\n  constructor(statusCode, statusText, message = null) {\n    super(message);\n    this.name = 'Server Response';\n    this.statusCode = statusCode;\n    this.statusText = statusText;\n    this.message = message;\n    if (Error.captureStackTrace) {\n      Error.captureStackTrace(this, ErrorServerResponse);\n    } else {\n      this.stack = new Error().stack;\n    }\n  }\n}\n"],"file":"ErrorServerResponse.js"}